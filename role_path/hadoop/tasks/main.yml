---
- name: Check exist file
  stat:
    path: /tmp/hadoop-2.7.4.tar.gz
  register: file_result

- name: Download hadoop
  get_url:
    url: https://archive.apache.org/dist/hadoop/core/hadoop-2.7.4/hadoop-2.7.4.tar.gz 
    dest: /tmp  
  when: file_result.stat.exists == False

- name: Check exist directory
  stat:
    path: /Development/Hadoop/hadoop
  register: directory_result

- name: Unarchive hadoop binary file
  unarchive:
    src: /tmp/hadoop-2.7.4.tar.gz
    dest: /Development/Hadoop
    creates: /Development/Hadoop/hadoop
    remote_src: yes

- name: Rename hadoop directory
  command: mv /Development/Hadoop/hadoop-2.7.4 /Development/Hadoop/hadoop
  when: directory_result.stat.exists == False

- name: Set env
  lineinfile:
    dest: /Development/Hadoop/hadoop/etc/hadoop/hadoop-env.sh 
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^export HADOOP_HOME', line: 'export HADOOP_HOME="/Development/Hadoop/hadoop"' }
    - { regexp: '^export HADOOP_CONF_DIR', line: 'export HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-"${HADOOP_HOME}/etc/hadoop"}' }

- name: Copy configuration files
  template:
    src: "{{ item }}.j2"
    dest: "/Development/Hadoop/hadoop/etc/hadoop/{{ item }}"
  with_items:
    - core-site.xml
    - hdfs-site.xml
    - mapred-site.xml
    - yarn-site.xml

- name: Check exists tmp
  file: 
    path: /Development/Hadoop/hadoop/tmp
    state: absent

- name: Host check disable
  become: yes
  become_user: root
  lineinfile:
    dest: /etc/ssh/ssh_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^StrictHostKeyChecking', line: 'StrictHostKeyChecking no' }

- name: Command
  command: /Development/Hadoop/hadoop/bin/hdfs namenode -format

- name: Command
  command: /Development/Hadoop/hadoop/sbin/start-dfs.sh

- name: Command
  command: /Development/Hadoop/hadoop/sbin/start-yarn.sh

